---
commonOverlays:
  - name: "set the kubernetes and nukleros labels"
    query: "$"
    action: merge
    value:
      metadata:
        labels:
          app: external-dns-active-directory
          app.kubernetes.io/name: external-dns-active-directory
          app.kubernetes.io/instance: external-dns-active-directory
          app.kubernetes.io/component: external-dns
          app.kubernetes.io/version: {{ .version }}
          app.kubernetes.io/part-of: external-dns
          app.kubernetes.io/managed-by: platform-component-library
          platform.nukleros.io/group: ingress
          platform.nukleros.io/project: external-dns
      spec:
        selector:
          matchLabels:
            app: external-dns-active-directory
        template:
          metadata:
            labels:
              app: external-dns-active-directory
              app.kubernetes.io/name: external-dns-active-directory
              app.kubernetes.io/instance: external-dns-active-directory
              app.kubernetes.io/component: external-dns
              app.kubernetes.io/version: {{ .version }}
              app.kubernetes.io/part-of: external-dns
              app.kubernetes.io/managed-by: platform-component-library
              platform.nukleros.io/group: ingress
              platform.nukleros.io/project: external-dns
    documentQuery:
      - conditions:
          - query: $[?($.kind == "Deployment")]

yamlFiles:
  - name: "external-dns deployments"
    path: "../../vendor/external-dns-deployment.yaml"
    outputPath: "ingress/external-dns/deployment-active-directory.yaml"
    overlays:
      - name: "update deployment spec"
        query: $
        value:
          metadata:
            name: "{{ .names.active_directory }}"
            namespace: "{{ .namespace }}"
          spec:
            replicas: !!int {{ .replicas }}
            template:
              spec:
                securityContext:
                  fsGroup: 1001
                  runAsUser: 1001
                  runAsGroup: 1001
                  runAsNonRoot: true
                volumes:
                  - name:  external-dns-active-directory-kerberos
                    configMap:
                      defaultMode: 420
                      name: external-dns-active-directory-kerberos
                nodeSelector:
                  kubernetes.io/os: linux
                affinity:
                  podAntiAffinity:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      - weight: 100
                        podAffinityTerm:
                          topologyKey: kubernetes.io/hostname
                          labelSelector:
                            matchExpressions:
                              - key: app.kubernetes.io/name
                                operator: In
                                values:
                                  - "{{ .names.active_directory }}"

      - name: "update container spec"
        query: spec.template.spec.containers[*]
        value:
          envFrom:
            - secretRef:
                name: external-dns-active-directory
          image: "{{ .image }}"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
          resources:
            requests:
              cpu: "{{ .resources.requests.cpu }}"
              memory: "{{ .resources.requests.memory }}"
            limits:
              cpu: "{{ .resources.limits.cpu }}"
              memory: "{{ .resources.limits.memory }}"
          volumeMounts:
            - name: external-dns-active-directory-kerberos
              subPath: krb5.conf
              mountPath: /etc/krb5.conf
